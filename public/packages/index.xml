<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Packages :: Go Kure</title>
    <link>http://localhost:1313/packages/index.html</link>
    <description>Kure Packages Explore the core packages that make up the Kure library. Each package provides specific functionality for building and managing Kubernetes resources.&#xA;Core Packages Launcher The launcher package (formerly kurel) provides a package system for creating reusable, customizable Kubernetes applications without the complexity of templating engines. It uses a declarative patch-based approach to customize base Kubernetes manifests.&#xA;Patch The patch package implements a JSONPath-based declarative patching system. It allows you to modify Kubernetes resources using a simple, powerful patch language that maintains YAML structure and comments.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/packages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Patch Package</title>
      <link>http://localhost:1313/packages/patch/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/packages/patch/index.html</guid>
      <description>Patch Package Documentation The patch package implements a powerful JSONPath-based declarative patching system for Kubernetes resources. It allows you to modify resources while preserving YAML structure, comments, and formatting.&#xA;Documentation Patch File Format Specification Complete specification of the .kpatch file format, including:&#xA;Syntax and structure Scope selection Operation types Examples and best practices Patch Engine Design Technical design documentation covering:&#xA;Architecture overview Processing pipeline Implementation details Performance considerations Path Resolution Detailed explanation of how paths are resolved:</description>
    </item>
  </channel>
</rss>